/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentdb;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author DNO
 */
public class Student extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    public Student() {
        initComponents();
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jRadioButton3.setVisible(false);
        jRadioButton4.setVisible(false);
        jRadioButton5.setVisible(false);
        jTextArea1.setVisible(false);
        jButton6.setVisible(false);
        this.setTitle("Student Database");

    }
    int flag = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setText("Student Details");

        jButton1.setText("Add Student");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Total Students");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Average Marks");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Topper");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Result");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(null);
        jScrollPane1.setViewportView(jTextArea1);

        jButton6.setText("Cancel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Delete Class");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Count Row");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(243, 243, 243))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jRadioButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jButton2)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jRadioButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jButton3)))
                        .addGap(19, 19, 19)
                        .addComponent(jButton4)
                        .addGap(6, 6, 6)
                        .addComponent(jRadioButton4)
                        .addGap(7, 7, 7)
                        .addComponent(jButton5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jRadioButton5)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton8)
                                .addGap(26, 26, 26)))
                        .addComponent(jButton7)
                        .addGap(36, 36, 36))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        if (flag == 1) {
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float grandTotal = 0;
                int count = 0;
                while (rst.next()) {
                    grandTotal = grandTotal + Float.parseFloat(rst.getString(5));
                    count++;
                }
                float avg = grandTotal / count;
                jTextArea1.setText("Average of SP is :" + avg);
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (flag == 2) {
            jTextArea1.setVisible(true);
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float MAX = 0;

                while (rst.next()) {
                    if (MAX < Float.parseFloat(rst.getString(5))) {
                        MAX = Float.parseFloat(rst.getString(5));
                    }
                }
                String sql = "SELECT * FROM `result` WHERE `SP` = " + MAX;
                ResultSet rst1 = stmt.executeQuery(sql);
                rst1.next();
                jTextArea1.setText("Topper of SP is : " + rst1.getString(1) + " with " + rst1.getString(3) + " Marks");
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            new addStudent().setVisible(true);
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextArea1.setText("");
        jTextArea1.setVisible(true);
        try {

            Connection conn = ConnectionDB.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
            String names = "";
            int count = 1;
            while (rst.next()) {
                names = names + (count++) + ". " + rst.getString(1) + "\n";
            }

            jTextArea1.setText(names);
            ConnectionDB.closeConnection(conn);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextArea1.setText("");
        jRadioButton1.setVisible(true);
        jRadioButton2.setVisible(true);
        jRadioButton3.setVisible(true);
        jRadioButton4.setVisible(true);
        jRadioButton5.setVisible(true);
        jButton6.setVisible(true);

        jRadioButton1.setText("Internet Technology");
        jRadioButton2.setText("TOC");
        jRadioButton3.setText("SP");
        jRadioButton4.setText("Microprocessor");
        jRadioButton5.setText("All");

        jTextArea1.setVisible(true);

        flag = 1;


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if (flag == 1) {
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float grandTotal = 0;
                int count = 0;
                while (rst.next()) {
                    grandTotal = grandTotal + Float.parseFloat(rst.getString(3));
                    count++;
                }
                float avg = grandTotal / count;
                jTextArea1.setText("Average of IT is :" + avg);
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (flag == 2) {
            jTextArea1.setVisible(true);
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float MAX = 0;

                while (rst.next()) {
                    if (MAX < Float.parseFloat(rst.getString(3))) {
                        MAX = Float.parseFloat(rst.getString(3));
                    }
                }
                String sql = "SELECT * FROM `result` WHERE `IT` = " + MAX;
                ResultSet rst1 = stmt.executeQuery(sql);
                rst1.next();
                jTextArea1.setText("Topper of IT is : " + rst1.getString(1) + " with " + rst1.getString(3) + " Marks");
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        if (flag == 1) {
            jTextArea1.setVisible(true);
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float grandTotal = 0;
                int count = 0;
                while (rst.next()) {
                    grandTotal = grandTotal + Float.parseFloat(rst.getString(7));
                    count++;
                }
                float avg = grandTotal / count;
                jTextArea1.setText("Average of Total is :" + avg + " Out of 400");
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (flag == 2) {
            jTextArea1.setVisible(true);
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();

                ResultSet rst = stmt.executeQuery("SELECT COUNT(Total)from result");
                rst.next();
                int size = rst.getInt(1);
                float Total[] = new float[size];
                int i = 0;
                rst = stmt.executeQuery("SELECT * FROM `result`");
                while (rst.next()) {
                    Total[i] = Float.parseFloat(rst.getString(7));
                    i++;
                }
                float largest = 0;
                float secondLargest = 0;
                for (i = 0; i < size; i++) {
                    if (largest < Total[i]) {
                        secondLargest = largest;
                        largest = Total[i];
                    } else if (secondLargest < Total[i]) {
                        secondLargest = Total[i];
                    }
                }
                String sql = "SELECT * FROM `result` WHERE `Total` = " + largest;
                rst = stmt.executeQuery(sql);
                rst.next();
                jTextArea1.setText("Topper of Class is : " + rst.getString(1) + " with " + rst.getString(7) + " Marks");
                rst = stmt.executeQuery("SELECT * FROM `result` WHERE `Total` = " + secondLargest);
                rst.next();
                jTextArea1.append("\nSecond Topper : " + rst.getString(1) + " with " + rst.getString(7) + " Marks");
                stmt.close();
                ConnectionDB.closeConnection(conn);

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jRadioButton3.setVisible(false);
        jRadioButton4.setVisible(false);
        jRadioButton5.setVisible(false);
        jButton6.setVisible(false);
        jTextArea1.setVisible(false);
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if (flag == 1) {
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float grandTotal = 0;
                int count = 0;
                while (rst.next()) {
                    grandTotal = grandTotal + Float.parseFloat(rst.getString(4));
                    count++;
                }
                float avg = grandTotal / count;
                jTextArea1.setText("Average of TOC is :" + avg);
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (flag == 2) {
            jTextArea1.setVisible(true);
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float MAX = 0;

                while (rst.next()) {
                    if (MAX < Float.parseFloat(rst.getString(4))) {
                        MAX = Float.parseFloat(rst.getString(4));
                    }
                }
                String sql = "SELECT * FROM `result` WHERE `TOC` = " + MAX;
                ResultSet rst1 = stmt.executeQuery(sql);
                rst1.next();
                jTextArea1.setText("Topper of TOC is : " + rst1.getString(1) + " with " + rst1.getString(4) + " Marks");
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        if (flag == 1) {
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float grandTotal = 0;
                int count = 0;
                while (rst.next()) {
                    grandTotal = grandTotal + Float.parseFloat(rst.getString(6));
                    count++;
                }
                float avg = grandTotal / count;
                jTextArea1.setText("Average of Micro is :" + avg);
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (flag == 2) {
            jTextArea1.setVisible(true);
            try {

                Connection conn = ConnectionDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rst = stmt.executeQuery("SELECT * FROM `result`");
                float MAX = 0;

                while (rst.next()) {
                    if (MAX < Float.parseFloat(rst.getString(6))) {
                        MAX = Float.parseFloat(rst.getString(6));
                    }
                }
                String sql = "SELECT * FROM `result` WHERE `Micro` = " + MAX;
                ResultSet rst1 = stmt.executeQuery(sql);
                rst1.next();
                jTextArea1.setText("Topper of Micro is : " + rst1.getString(1) + " with " + rst1.getString(6) + " Marks");
                ConnectionDB.closeConnection(conn);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jTextArea1.setText("");
        jRadioButton1.setVisible(true);
        jRadioButton2.setVisible(true);
        jRadioButton3.setVisible(true);
        jRadioButton4.setVisible(true);
        jRadioButton5.setVisible(true);
        jButton6.setVisible(true);

        jRadioButton1.setText("Internet Technology");
        jRadioButton2.setText("TOC");
        jRadioButton3.setText("SP");
        jRadioButton4.setText("Microprocessor");
        jRadioButton5.setText("All");

        jTextArea1.setVisible(true);
        flag = 2;
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        java.awt.EventQueue.invokeLater(() -> {
            new deleteClass().setVisible(true);
        });


    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Connection conn;
        try {jTextArea1.setVisible(true);
            conn = ConnectionDB.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet res = stmt.executeQuery("SELECT * FROM `result`");
            String First = "First Division : \n";
            String Second = "Second Divison : \n";
            String Third = "Third Division : \n";
            int i1,i2,i3; i1=i2=i3=1;
            while (res.next()) {
                if ((res.getFloat(7)/4) > 75) {
                    First = First + i1 +". "+res.getString(1) + "\n"; ++i1;
                } else if ((res.getFloat(7)/4) > 60) {
                    Second = Second + i2 +". "+res.getString(1) + "\n"; ++i2;
                } else if ((res.getFloat(7)/4) > 45) {
                    Third = Third + i3 +". "+res.getString(1) + "\n"; ++i3;
                }
            }
            jTextArea1.setText(First+"\n"+Second+"\n"+Third);

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {
            Connection conn = ConnectionDB.getConnection();
            CallableStatement cstmt= conn.prepareCall("{call getRowCount(?)}");
            cstmt.registerOutParameter(1,java.sql.Types.INTEGER);
            cstmt.execute();
            int row=cstmt.getInt(1);
            jTextArea1.setVisible(true);
           jTextArea1.setText("Total Number of Students "+" "+row);
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Student().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
